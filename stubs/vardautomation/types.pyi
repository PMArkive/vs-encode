from _typeshed import Incomplete
from abc import ABC
from lxml import etree
from typing import Any, Callable, Iterable, Iterator, List, Mapping, MutableSet, Optional, TypeVar, Union
from vapoursynth import VideoNode
from vardefunc.types import DuplicateFrame as DuplicateFrame, Trim as Trim

T = TypeVar('T')
F = TypeVar('F', bound=Callable[..., Any])
AnyPath: Incomplete
Element: Incomplete
UpdateFunc = Callable[[int, int], None]
VPSIdx = Callable[[str], VideoNode]

class ElementTree(etree._ElementTree):
    def xpath(self, _path: Union[str, bytes], namespaces: Optional[Mapping[str, str]] = ..., extensions: Any = ..., smart_strings: bool = ..., **_variables: Any) -> List[Element]: ...

class AbstractMutableSet(MutableSet[T], ABC):
    def __init__(self, __iterable: Optional[Iterable[T]] = ...) -> None: ...
    def __contains__(self, x: object) -> bool: ...
    def __iter__(self) -> Iterator[T]: ...
    def __len__(self) -> int: ...
    def add(self, value: T) -> None: ...
    def discard(self, value: T) -> None: ...
    def update(self, *s: Iterable[T]) -> None: ...
